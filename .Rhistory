wd = os.getcwd()
import streamlit as st
import pandas as pd
import os
import plotly.express as px
st.title("Kelp Difference")
base_select = "PAR"
wd = os.getcwd()
file_name = str(base_select + "_data.csv")
files_csv = "data/csv"
fullname = os.path.join(wd,files_csv , file_name)
fullname
os.path.exists(fullname)
df = pd.read_csv(fullname)
base_select = "PAT"
wd = os.getcwd()
file_name = str(base_select + "_data.csv")
files_csv = "data/csv"
fullname = os.path.join(wd,files_csv , file_name)
os.path.exists(fullname)
# Lectura de Base
df = pd.read_csv(fullname)
df
serie_filter = "Navidad"
title_plot = str("Time Series NDVI serie "+serie_filter)
df_serie = df.loc[(df.serie == serie_filter)]
df_serie = df.loc[(df.Site == serie_filter)]
df_serie
fig = px.line(df_serie, x='date', y=colname, title=title_plot
#,width = width, height= height
)
fig = px.line(df_serie, x='date', y=base_select, title=title_plot
title_plot
title_plot = str("Time Serie"+ " de "+serie_filter)
title_plot
title_plot = str("Time Serie "+ base_select +" de "+serie_filter)
title_plot
title_plot = str("Time Serie "+ base_select +" en "+serie_filter)
df_serie = df.loc[(df.Site == serie_filter)]
# Generación de Visualización
width = 750
height = 550
fig = px.line(df_serie, x='date', y=base_select, title=title_plot
#,width = width, height= height
)
fig.update_traces(line_color='#02818a', line_width=1)
fig = px.line(df_serie, x='date', y=base_select, title=title_plot
#,width = width, height= height
)
df_serie
base_select
fig = px.line(df_serie, x='date_start', y=base_select, title=title_plot
#,width = width, height= height
)
base_select ="PAR"
width = 750
height = 550
fig = px.line(df_serie, x='date_start', y=base_select, title=title_plot
#,width = width, height= height
)
fig
fig.update_traces(line_color='#02818a', line_width=1)
#fig.update_layout(
#    plot_bgcolor='white'
#)
fig.update_xaxes(rangeslider_visible=True,
rangeselector=dict(
buttons=list([
dict(count=6, label="6 meses", step="month", stepmode="backward"),
dict(count=1, label="1 año", step="year", stepmode="backward"),
dict(count=2, label="2 años", step="year", stepmode="backward"),
dict(count=5, label="5 años", step="year", stepmode="backward"),
OO
))
delta_color="inverse")
import streamlit as st
import pandas as pd
import os
import plotly.express as px
import numpy as np
import base64
df_map = pd.DataFrame(
np.random.randn(1000, 2) / [50, 50] + [37.76, -122.4],
columns=['lat', 'lon'])
df_map
import pydeck as pdk
import rasterio
st.write("Bosques de algas")
tif = "images/AreaKD_Algarrobo.tif"
# This is probably hugely inefficient, but it works. Opens the COG as a numpy array
src = rasterio.open(tif)
array = src.read()
array
library(raster)
nlayers(r)
r <- brick("AreaKD_Algarrobo.tif")
setwd("~/Downloads")
r <- brick("AreaKD_Algarrobo.tif")
1:nlayers(r)
i = 1
print(paste0("Resumiendolayer : ", i))
val <-  values(r[[i]])
val_res <-  val %>% sum(na.rm = T)
library(dplyr)
val_res <-  val %>% sum(na.rm = T)
val_res
val_res <-  val %>% sum(na.rm = T) %>% mutate(layer = i)
val_res <-  val %>% sum(na.rm = T) %>%
as.data.frame() %>%
mutate(layer = i)
val_res
# s <- sample(x = 1:nlayers(r), replace = F, size = n_sample)
# s
res = NULL
val_res <-  val %>% sum(na.rm = T) %>%
as.data.frame() %>%
mutate(layer = i)
res <- rbind(res, val_res)
res
val_res <-  val %>% sum(na.rm = T) %>%
as.data.frame() %>%
rename(suma = .)
val_res <-  val %>% sum(na.rm = T) %>%
as.data.frame() %>%
rename(suma = 1)
val_res
val_res <-  val %>% sum(na.rm = T) %>%
as.data.frame() %>%
rename(suma = 1) %>%
mutate(layer = i)
val_res
res <- rbind(res, val_res)
# s <- sample(x = 1:nlayers(r), replace = F, size = n_sample)
# s
res = NULL
res <- rbind(res, val_res)
res
i = 2
print(paste0("Resumiendolayer : ", i))
val <-  values(r[[i]])
val_res <-  val %>% sum(na.rm = T) %>%
as.data.frame() %>%
rename(suma = 1) %>%
mutate(layer = i)
res <- rbind(res, val_res)
res
setwd("~/Documents/hackaton/app/KD_app")
library(readr)
Lowtide_KelpAreas_Navidad_clean <- read_csv("data/csv/Lowtide_KelpAreas_Navidad_clean.csv")
View(Lowtide_KelpAreas_Navidad_clean)
library(dplyr)
library(purrr)
csv_files <-  list.files(path = path_csv, pattern = "Low*.csv$")
path_csv <-  "data/csv"
path_csv <-  "data/csv"
path_csv <-  "data/csv"
csv_files <-  list.files(path = path_csv, pattern = "Low*.csv$")
csv_files
path_csv <-  "data/csv/"
csv_files <-  list.files(path = path_csv, pattern = "Low*.csv$")
csv_files
csv_files <-  list.files(path = path_csv, pattern = "*.csv$")
csv_files
csv_files <-  list.files(path = path_csv, pattern = "Low*")
csv_files
csv_files <-  list.files(path = path_csv, pattern = "Low*") %>%
map(read.csv)
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv)
csv_files
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(Image_date, area_kelp))
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp))
csv_files
names_files <- list.files(path = path_csv, pattern = "Low*", full.names = F)
names_files
names_files <- list.files(path = path_csv, pattern = "Low*", full.names = F) %>%
gsub(pattern = "Lowtide_KelpAreas_|_clean.csv", replacement = "",x = .)
names_files
map(~mutate(., Site = names_files))
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp)) %>%
map(~mutate(., Site = names_files))
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp)) %>%
set_names(names_files)
csv_files$Algarrobo
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp)) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable")
csv_files
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp)) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable") %>%
select(date = Image_date,Kelp = area_kelp, Site=variable)
csv_files
head(csv_files)
names_files <- list.files(path = path_csv, pattern = "*data.csv", full.names = F) %>%
gsub(pattern = "_data.csv", replacement = "",x = .)
names_files
names_areas <- list.files(path = path_csv, pattern = "Low*", full.names = F) %>%
gsub(pattern = "Lowtide_KelpAreas_|_clean.csv", replacement = "",x = .)
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp)) %>%
set_names(names_areas) %>%
dplyr::bind_rows(.id = "variable") %>%
select(date = Image_date,Kelp = area_kelp, Site=variable)
names_files <- list.files(path = path_csv, pattern = "*data.csv", full.names = F) %>%
gsub(pattern = "_data.csv", replacement = "",x = .)
names_areas
csv_files
head(csv_files)
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable") %>%
reaname(date = date_start)
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable") %>%
rename(date = date_start)
names_files <- list.files(path = path_csv, pattern = "*data.csv", full.names = F) %>%
gsub(pattern = "_data.csv", replacement = "",x = .)
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable") %>%
rename(date = date_start)
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable")
csv_files <-  list.files(path = path_csv, pattern = "data.csv*", full.names = T) %>%
map(read.csv) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable") %>%
rename(date = date_start)
csv_files
csv_files <-  list.files(path = path_csv, pattern = "data.csv*", full.names = T) %>%
map(read.csv) %>%
set_names(names_files) %>%
dplyr::bind_rows(.id = "variable")
head(csv_files)
csv_files %>% filter(variable =SST)
csv_files %>% filter(variable ==SST)
tab_val_raster <- readRDS("/Users/denisberroeta/Downloads/tab_val_raster.rds")
tab_val_raster
tab_val_raster %>% filter(max(suma))
tab_val_raster %>% top_n(n=10)
?top_n
tab_val_raster %>% slice_max((n=10)
)
tab_val_raster %>% slice_max(n=10)
tab_val_raster slice_max(suma, n=10)
tab_val_raster %>% slice_max(suma, n=10)
r
mapview(r[[36]])
library(mapview)
mapview(r[[36]])
tab_val_raster %>% slice_max(suma, n=10)
mapview(r[[133]])
mapview(r[[467]])
mapview(r[[342]])
mapview(r[[133]])
r_obj <- r[[133]]
r_obj[r_obj[] < 0.01] = NA
mapview(r_obj)
r_obj[r_obj[] < 0.015] = NA
mapview(r_obj)
csv_files
csv_files <-  list.files(path = path_csv, pattern = "Low*", full.names = T) %>%
map(read.csv) %>%
map(~select(.,Image_date, area_kelp)) %>%
set_names(names_areas) %>%
dplyr::bind_rows(.id = "variable") %>%
select(date = Image_date,Kelp = area_kelp, Site=variable)
head(csv_files)
write_csv2(csv_files, "data/csv/kelp_data.csv")
read_csv2("data/csv/PAR_data.csv")
par <- read_csv2("data/csv/PAR_data.csv")
par
write_csv2(par, "data/csv/PAR_data.csv")
par <- read.csv("data/csv/PAR_data.csv") %>%
rename(date_start =date)
par <- read.csv("data/csv/PAR_data.csv") %>%
rename(date =date_start)
par
names(par)
par <- read.csv("data/csv/PAR_data.csv") %>%
rename(date =date_start) %>%
select(-X)
head(par)
write_csv2(par, "data/csv/PAR_data.csv")
par <- read.csv("data/csv/PAR_data.csv")
par <- read.csv("data/csv/PAR_data.csv") %>%
rename(date =date_start) %>%
select(-X)
par <- read.csv("data/csv/PAR_data.csv") %
par <- read.csv("data/csv/PAR_data.csv")
par
write.csv(par, "data/csv/PAR_data.csv")
par <- read.csv("data/csv/PAR_data.csv")
head(par <- read.csv("data/csv/PAR_data.csv"))
head(par)
write.csv(par, "data/csv/PAR_data.csv", append = F)
write.csv(par, "data/csv/PAR_data.csv", row.names = NA)
write.csv(par, "data/csv/PAR_data.csv", row.names = FALSE)
par <- read.csv("data/csv/PAR_data.csv")
par
head(par)
SST <- read.csv("data/csv/SST_data.csv") %>%
rename(date =date_start) %>%
select(-X)
write.csv(SST, "data/csv/SST_data.csv", row.names = FALSE)
SST
base_select= "kelp"
reticulate::repl_python()
write_csv2(csv_files, "data/csv/kelp_data.csv", sep=",")
write.csv(csv_files, "data/csv/kelp_data.csv", sep=",")
write.csv(csv_files, "data/csv/kelp_data.csv")
write.csv(csv_files, "data/csv/kelp_data.csv",  row.names = FALSE)
reticulate::repl_python()
